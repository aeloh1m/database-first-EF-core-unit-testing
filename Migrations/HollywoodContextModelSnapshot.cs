// <auto-generated />
using System;
using EFCoreProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreProject.Migrations
{
    [DbContext(typeof(HollywoodContext))]
    partial class HollywoodContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("EFCoreProject.Models.Actor", b =>
                {
                    b.Property<int>("IdActor")
                        .HasColumnType("int")
                        .HasColumnName("idActor");

                    b.Property<DateOnly?>("ActorBirthdate")
                        .HasColumnType("date")
                        .HasColumnName("actor_birthdate");

                    b.Property<string>("ActorName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("actor_name");

                    b.Property<string>("ActorPicture")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("actor_picture");

                    b.HasKey("IdActor")
                        .HasName("PRIMARY");

                    b.ToTable("actor", (string)null);
                });

            modelBuilder.Entity("EFCoreProject.Models.Movie", b =>
                {
                    b.Property<int>("IdMovie")
                        .HasColumnType("int")
                        .HasColumnName("idMovie");

                    b.Property<float?>("MovieBudget")
                        .HasColumnType("float")
                        .HasColumnName("movie_budget");

                    b.Property<int>("MovieDuration")
                        .HasColumnType("int")
                        .HasColumnName("movie_duration");

                    b.Property<string>("MovieGenre")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("movie_genre");

                    b.Property<string>("MovieName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("movie_name");

                    b.HasKey("IdMovie")
                        .HasName("PRIMARY");

                    b.ToTable("movie", (string)null);
                });

            modelBuilder.Entity("EFCoreProject.Models.Actor", b =>
                {
                    b.HasOne("EFCoreProject.Models.Movie", "IdActorNavigation")
                        .WithOne("Actor")
                        .HasForeignKey("EFCoreProject.Models.Actor", "IdActor")
                        .IsRequired()
                        .HasConstraintName("Movie_Actor");

                    b.Navigation("IdActorNavigation");
                });

            modelBuilder.Entity("EFCoreProject.Models.Movie", b =>
                {
                    b.Navigation("Actor");
                });
#pragma warning restore 612, 618
        }
    }
}
